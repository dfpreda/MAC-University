// <auto-generated />
using MAC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MAC.Data.Migrations
{
    [DbContext(typeof(MacContext))]
    [Migration("20220603181114_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MAC.Data.Entities.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("MAC.Data.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("MAC.Data.Entities.ClassGroup", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("ClassId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("ClassGroups");
                });

            modelBuilder.Entity("MAC.Data.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("MAC.Data.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MAC.Data.Entities.Badge", b =>
                {
                    b.HasOne("MAC.Data.Entities.Student", "Student")
                        .WithOne("Badge")
                        .HasForeignKey("MAC.Data.Entities.Badge", "StudentId")
                        .HasConstraintName("FK_StudentId_StudentBadge")
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MAC.Data.Entities.ClassGroup", b =>
                {
                    b.HasOne("MAC.Data.Entities.Class", "Class")
                        .WithMany("ClassGroups")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_ClassId_ClassGroup")
                        .IsRequired();

                    b.HasOne("MAC.Data.Entities.Group", "Group")
                        .WithMany("ClassGroups")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_GroupId_ClassGroup")
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("MAC.Data.Entities.Student", b =>
                {
                    b.HasOne("MAC.Data.Entities.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_GroupId_Student")
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("MAC.Data.Entities.Class", b =>
                {
                    b.Navigation("ClassGroups");
                });

            modelBuilder.Entity("MAC.Data.Entities.Group", b =>
                {
                    b.Navigation("ClassGroups");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("MAC.Data.Entities.Student", b =>
                {
                    b.Navigation("Badge");
                });
#pragma warning restore 612, 618
        }
    }
}
